Section #1: #Getting #Started
Lecture #1
Introduction #and #The #Goal #of #This #Course
Preview
04:56
Lecture #2
Setup
03:27
Lecture #3
Big #Words #and #Javascript
01:25
Lecture #4
Watching #this #Course #in #High #Definition
Article
Lecture #5
Understanding, #Frameworks, #and #The #Weird #Parts
Preview
04:17
Section #2: #Execution #Contexts #and #Lexical #Environments
Lecture #6
Conceptual #Aside: #Syntax #Parsers, #Execution #Contexts, #and #Lexical #Environments
Preview
07:35
Lecture #7
Conceptual #Aside: #Name/Value #Pairs #and #Objects
Preview
04:08
Lecture #8
Downloading #Source #Code #for #This #Course
Preview
Article
Lecture #9
The #Global #Environment #and #The #Global #Object
Preview
10:58
Lecture #10
The #Execution #Context #- #Creation #and #Hoisting
Preview
09:43
Lecture #11
Conceptual #Aside: #Javascript #and #'undefined'
Preview
08:04
Lecture #12
The #Execution #Context #- #Code #Execution
Preview
02:54
Lecture #13
Conceptual #Aside: #Single #Threaded, #Synchronous #Execution
Preview
02:16
Lecture #14
Function #Invocation #and #the #Execution #Stack
Preview
08:06
Lecture #15
Functions, #Context, #and #Variable #Environments
Preview
07:56
Lecture #16
The #Scope #Chain
Preview
17:25
Lecture #17
Scope, #ES6, #and #let
Preview
04:18
Lecture #18
What #About #Asynchronous #Callbacks?
Preview
10:26
Section #3: #Types #and #Operators
Lecture #19
Conceptual #Aside: #Types #and #Javascript
Preview
02:50
Lecture #20
Primitive #Types
Preview
05:17
Lecture #21
Conceptual #Aside: #Operators
Preview
06:32
Lecture #22
Operator #Precedence #and #Associativity
Preview
14:14
Lecture #23
Operator #Precedence #and #Associativity #Table
Preview
Article
Lecture #24
Conceptual #Aside: #Coercion
Preview
06:14
Lecture #25
Comparison #Operators
Preview
19:42
Lecture #26
Equality #Comparisons #Table
Preview
Article
Lecture #27
Existence #and #Booleans
Preview
07:24
Lecture #28
Default #Values
Preview
07:51
Lecture #29
Framework #Aside: #Default #Values
Preview
07:11
Section #4: #Objects #and #Functions
Lecture #30
Objects #and #the #Dot
15:23
Lecture #31
Objects #and #Object #Literals
10:32
Lecture #32
Framework #Aside: #Faking #Namespaces
08:07
Lecture #33
JSON #and #Object #Literals
07:17
Lecture #34
Functions #are #Objects
08:02
Lecture #35
Function #Statements #and #Function #Expressions
20:32
Lecture #36
Conceptual #Aside: #By #Value #vs #By #Reference
16:09
Lecture #37
Objects, #Functions, #and #'this'
21:26
Lecture #38
Conceptual #Aside: #Arrays #- #Collections #of #Anything
05:39
Lecture #39
'arguments' #and #spread
12:00
Lecture #40
Framework #Aside: #Function #Overloading
04:43
Lecture #41
Conceptual #Aside: #Syntax #Parsers
02:25
Lecture #42
Dangerous #Aside: #Automatic #Semicolon #Insertion
05:46
Lecture #43
Framework #Aside: #Whitespace
04:25
Lecture #44
Immediately #Invoked #Functions #Expressions #(IIFEs)
17:07
Lecture #45
Framework #Aside: #IIFEs #and #Safe #Code
08:05
Lecture #46
Understanding #Closures
11:09
Lecture #47
Understanding #Closures #- #Part #2
19:20
Lecture #48
Framework #Aside: #Function #Factories
12:24
Lecture #49
Closures #and #Callbacks
08:26
Lecture #50
call(), #apply(), #and #bind()
20:54
Lecture #51
Functional #Programming
20:17
Lecture #52
Functional #Programming #- #Part #2
08:05
Section #5: #Object-Oriented #Javascript #and #Prototypal #Inheritance
Lecture #53
Conceptual #Aside: #Classical #vs #Prototypal #Inheritance
05:11
Lecture #54
Understanding #the #Prototype
14:02
Lecture #55
Everything #is #an #Object #(or #a #primitive)
05:46
Lecture #56
Reflection #and #Extend
14:59
Section #6: #Building #Objects
Lecture #57
Function #Constructors, #'new', #and #the #History #of #Javascript
15:53
Lecture #58
Function #Constructors #and #'.prototype'
10:24
Lecture #59
Dangerous #Aside: #'new' #and #functions
04:16
Lecture #60
Conceptual #Aside: #Built-In #Function #Constructors
10:32
Lecture #61
Dangerous #Aside: #Built-In #Function #Constructors
03:57
Lecture #62
Dangerous #Aside: #Arrays #and #for..in
03:16
Lecture #63
Object.create #and #Pure #Prototypal #Inheritance
12:37
Lecture #64
ES6 #and #Classes
06:27
Section #7: #Odds #and #Ends
Lecture #65
Initialization
05:41
Lecture #66
'typeof' #, #'instanceof', #and #Figuring #Out #What #Something #Is
06:41
Lecture #67
Strict #Mode
05:51
Lecture #68
Strict #Mode #Reference
Article
Section #8: #Examining #Famous #Frameworks #and #Libraries
Lecture #69
Learning #From #Other's #Good #Code
03:51
Lecture #70
Deep #Dive #into #Source #Code: #jQuery #- #Part #1
21:31
Lecture #71
Deep #Dive #into #Source #Code: #jQuery #- #Part #2
15:38
Lecture #72
Deep #Dive #into #Source #Code: #jQuery #- #Part #3
11:22
Section #9: #Let's #Build #a #Framework #/ #Library!
Lecture #73
Requirements
02:57
Lecture #74
Structuring #Safe #Code
03:07
Lecture #75
Our #Object #and #Its #Prototype
09:17
Lecture #76
Properties #and #Chainable #Methods
16:58
Lecture #77
Adding #jQuery #Support
05:22
Lecture #78
Good #Commenting
02:21
Lecture #79
Let's #Use #Our #Framework
08:11
Lecture #80
A #Side #Note
00:32
Section #10: #BONUS #Lectures
Lecture #81
TypeScript, #ES6, #and #Transpiled #Languages
04:33
Lecture #82
Transpiled #Languages #References
Article
Section #11: #BONUS: #Getting #Ready #for #ECMAScript #6
Lecture #83
Existing #and #Upcoming #Features
00:54
Lecture #84
ES6 #Features #Reference
Article
Section #12: #Conclusion
Lecture #85
Learning #to #Love #the #Weird #Parts
01:14
Students #Who #Viewed #This #Course #Also #Viewed
